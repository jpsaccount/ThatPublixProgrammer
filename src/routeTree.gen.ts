/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public/route'
import { Route as AuthRouteImport } from './routes/_auth/route'

// Create Virtual Routes

const AuthIndexLazyImport = createFileRoute('/_auth/')()
const AuthLocationLazyImport = createFileRoute('/_auth/location')()
const AuthFixturesLazyImport = createFileRoute('/_auth/fixtures')()
const AuthBlogLazyImport = createFileRoute('/_auth/blog')()
const AuthTimesheetIndexLazyImport = createFileRoute('/_auth/timesheet/')()
const AuthProjectsIndexLazyImport = createFileRoute('/_auth/projects/')()
const AuthProjectDatabasesIndexLazyImport = createFileRoute(
  '/_auth/project-databases/',
)()
const AuthOrganizationIndexLazyImport = createFileRoute(
  '/_auth/organization/',
)()
const AuthManufacturersIndexLazyImport = createFileRoute(
  '/_auth/manufacturers/',
)()
const AuthLampsIndexLazyImport = createFileRoute('/_auth/lamps/')()
const AuthInvoicesIndexLazyImport = createFileRoute('/_auth/invoices/')()
const AuthGoboIndexLazyImport = createFileRoute('/_auth/gobo/')()
const AuthExpenseIndexLazyImport = createFileRoute('/_auth/expense/')()
const AuthEquipmentIndexLazyImport = createFileRoute('/_auth/equipment/')()
const AuthEquipmentTypeIndexLazyImport = createFileRoute(
  '/_auth/equipment-type/',
)()
const AuthEquipmentTypeGroupsIndexLazyImport = createFileRoute(
  '/_auth/equipment-type-groups/',
)()
const AuthDatasheetsIndexLazyImport = createFileRoute('/_auth/datasheets/')()
const AuthControlComponentsIndexLazyImport = createFileRoute(
  '/_auth/control-components/',
)()
const AuthClientsIndexLazyImport = createFileRoute('/_auth/clients/')()
const PublicQQLazyImport = createFileRoute('/_public/q/$q')()
const PublicAuthRegisterLazyImport = createFileRoute('/_public/auth/register')()
const PublicAuthLoginLazyImport = createFileRoute('/_public/auth/login')()
const PublicAuthActiveOrganizationLazyImport = createFileRoute(
  '/_public/auth/active-organization',
)()
const AuthTimesheetReviewLazyImport = createFileRoute(
  '/_auth/timesheet/review',
)()
const AuthOrganizationAccessLazyImport = createFileRoute(
  '/_auth/organization/access',
)()
const AuthInvoicesInvoiceIdLazyImport = createFileRoute(
  '/_auth/invoices/$invoiceId',
)()
const AuthGoboGoboIdLazyImport = createFileRoute('/_auth/gobo/$goboId')()
const AuthExpenseReportLazyImport = createFileRoute('/_auth/expense/report')()
const AuthEquipmentEquipmentIdLazyImport = createFileRoute(
  '/_auth/equipment/$equipmentId',
)()
const AuthDatasheetsIdLazyImport = createFileRoute('/_auth/datasheets/$id')()
const AuthControlComponentsControlComponentIdLazyImport = createFileRoute(
  '/_auth/control-components/$controlComponentId',
)()
const AuthClientsIdLazyImport = createFileRoute('/_auth/clients/$id')()
const AuthTimesheetDropdownsIndexLazyImport = createFileRoute(
  '/_auth/timesheet/dropdowns/',
)()
const AuthProjectsProjectIdIndexLazyImport = createFileRoute(
  '/_auth/projects/$projectId/',
)()
const AuthProjectDatabasesProjectDatabaseIdIndexLazyImport = createFileRoute(
  '/_auth/project-databases/$projectDatabaseId/',
)()
const AuthExpenseGlobalExpenseReportIdIndexLazyImport = createFileRoute(
  '/_auth/expense/$globalExpenseReportId/',
)()
const AuthEquipmentTypeGroupsEquipmentTypeGroupIdIndexLazyImport =
  createFileRoute('/_auth/equipment-type-groups/$equipmentTypeGroupId/')()
const AuthTimesheetDropdownsIdLazyImport = createFileRoute(
  '/_auth/timesheet/dropdowns/$id',
)()
const AuthProjectsProjectIdDocumentsLazyImport = createFileRoute(
  '/_auth/projects/$projectId/documents',
)()
const AuthProjectDatabasesProjectDatabaseIdRevitLazyImport = createFileRoute(
  '/_auth/project-databases/$projectDatabaseId/revit',
)()
const AuthEquipmentTypeGroupsEquipmentTypeGroupIdEquipmentTypeIdLazyImport =
  createFileRoute(
    '/_auth/equipment-type-groups/$equipmentTypeGroupId/$equipmentTypeId',
  )()
const AuthProjectsProjectIdBillingIndexLazyImport = createFileRoute(
  '/_auth/projects/$projectId/billing/',
)()
const AuthProjectDatabasesProjectDatabaseIdPunchListsIndexLazyImport =
  createFileRoute('/_auth/project-databases/$projectDatabaseId/punch-lists/')()
const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsIndexLazyImport =
  createFileRoute(
    '/_auth/project-databases/$projectDatabaseId/equipment-units/',
  )()
const AuthExpenseGlobalExpenseReportIdExpenseReportIdIndexLazyImport =
  createFileRoute('/_auth/expense/$globalExpenseReportId/$expenseReportId/')()
const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsUnitsLazyImport =
  createFileRoute(
    '/_auth/project-databases/$projectDatabaseId/equipment-units/units',
  )()
const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsQrCodesLazyImport =
  createFileRoute(
    '/_auth/project-databases/$projectDatabaseId/equipment-units/qr-codes',
  )()
const AuthExpenseGlobalExpenseReportIdExpenseReportIdReviewLazyImport =
  createFileRoute(
    '/_auth/expense/$globalExpenseReportId/$expenseReportId/review',
  )()
const AuthExpenseGlobalExpenseReportIdExpenseReportIdPrintLazyImport =
  createFileRoute(
    '/_auth/expense/$globalExpenseReportId/$expenseReportId/print',
  )()
const AuthProjectsProjectIdBillingWorkingPhasesIndexLazyImport =
  createFileRoute('/_auth/projects/$projectId/billing/working-phases/')()
const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdTagLazyImport =
  createFileRoute(
    '/_auth/project-databases/$projectDatabaseId/equipment-units/$equipmentUnitId/tag',
  )()
const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdReadonlyTagLazyImport =
  createFileRoute(
    '/_auth/project-databases/$projectDatabaseId/equipment-units/$equipmentUnitId/readonly-tag',
  )()
const AuthProjectsProjectIdBillingWorkingPhasesAnalyticsIndexLazyImport =
  createFileRoute(
    '/_auth/projects/$projectId/billing/working-phases/analytics/',
  )()
const AuthProjectsProjectIdBillingWorkingPhasesAnalyticsWorkingPhaseIdLazyImport =
  createFileRoute(
    '/_auth/projects/$projectId/billing/working-phases/analytics/$workingPhaseId',
  )()

// Create/Update Routes

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/_auth/index.lazy').then((d) => d.Route))

const AuthLocationLazyRoute = AuthLocationLazyImport.update({
  path: '/location',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/location.lazy').then((d) => d.Route),
)

const AuthFixturesLazyRoute = AuthFixturesLazyImport.update({
  path: '/fixtures',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/fixtures.lazy').then((d) => d.Route),
)

const AuthBlogLazyRoute = AuthBlogLazyImport.update({
  path: '/blog',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/_auth/blog.lazy').then((d) => d.Route))

const AuthTimesheetIndexLazyRoute = AuthTimesheetIndexLazyImport.update({
  path: '/timesheet/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/timesheet/index.lazy').then((d) => d.Route),
)

const AuthProjectsIndexLazyRoute = AuthProjectsIndexLazyImport.update({
  path: '/projects/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/projects/index.lazy').then((d) => d.Route),
)

const AuthProjectDatabasesIndexLazyRoute =
  AuthProjectDatabasesIndexLazyImport.update({
    path: '/project-databases/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/project-databases/index.lazy').then((d) => d.Route),
  )

const AuthOrganizationIndexLazyRoute = AuthOrganizationIndexLazyImport.update({
  path: '/organization/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/organization/index.lazy').then((d) => d.Route),
)

const AuthManufacturersIndexLazyRoute = AuthManufacturersIndexLazyImport.update(
  {
    path: '/manufacturers/',
    getParentRoute: () => AuthRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_auth/manufacturers/index.lazy').then((d) => d.Route),
)

const AuthLampsIndexLazyRoute = AuthLampsIndexLazyImport.update({
  path: '/lamps/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/lamps/index.lazy').then((d) => d.Route),
)

const AuthInvoicesIndexLazyRoute = AuthInvoicesIndexLazyImport.update({
  path: '/invoices/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/invoices/index.lazy').then((d) => d.Route),
)

const AuthGoboIndexLazyRoute = AuthGoboIndexLazyImport.update({
  path: '/gobo/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/gobo/index.lazy').then((d) => d.Route),
)

const AuthExpenseIndexLazyRoute = AuthExpenseIndexLazyImport.update({
  path: '/expense/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/expense/index.lazy').then((d) => d.Route),
)

const AuthEquipmentIndexLazyRoute = AuthEquipmentIndexLazyImport.update({
  path: '/equipment/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/equipment/index.lazy').then((d) => d.Route),
)

const AuthEquipmentTypeIndexLazyRoute = AuthEquipmentTypeIndexLazyImport.update(
  {
    path: '/equipment-type/',
    getParentRoute: () => AuthRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_auth/equipment-type/index.lazy').then((d) => d.Route),
)

const AuthEquipmentTypeGroupsIndexLazyRoute =
  AuthEquipmentTypeGroupsIndexLazyImport.update({
    path: '/equipment-type-groups/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/equipment-type-groups/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthDatasheetsIndexLazyRoute = AuthDatasheetsIndexLazyImport.update({
  path: '/datasheets/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/datasheets/index.lazy').then((d) => d.Route),
)

const AuthControlComponentsIndexLazyRoute =
  AuthControlComponentsIndexLazyImport.update({
    path: '/control-components/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/control-components/index.lazy').then((d) => d.Route),
  )

const AuthClientsIndexLazyRoute = AuthClientsIndexLazyImport.update({
  path: '/clients/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/clients/index.lazy').then((d) => d.Route),
)

const PublicQQLazyRoute = PublicQQLazyImport.update({
  path: '/q/$q',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() => import('./routes/_public/q/$q.lazy').then((d) => d.Route))

const PublicAuthRegisterLazyRoute = PublicAuthRegisterLazyImport.update({
  path: '/auth/register',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() =>
  import('./routes/_public/auth/register.lazy').then((d) => d.Route),
)

const PublicAuthLoginLazyRoute = PublicAuthLoginLazyImport.update({
  path: '/auth/login',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() =>
  import('./routes/_public/auth/login.lazy').then((d) => d.Route),
)

const PublicAuthActiveOrganizationLazyRoute =
  PublicAuthActiveOrganizationLazyImport.update({
    path: '/auth/active-organization',
    getParentRoute: () => PublicRouteRoute,
  } as any).lazy(() =>
    import('./routes/_public/auth/active-organization.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthTimesheetReviewLazyRoute = AuthTimesheetReviewLazyImport.update({
  path: '/timesheet/review',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/timesheet/review.lazy').then((d) => d.Route),
)

const AuthOrganizationAccessLazyRoute = AuthOrganizationAccessLazyImport.update(
  {
    path: '/organization/access',
    getParentRoute: () => AuthRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_auth/organization/access.lazy').then((d) => d.Route),
)

const AuthInvoicesInvoiceIdLazyRoute = AuthInvoicesInvoiceIdLazyImport.update({
  path: '/invoices/$invoiceId',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/invoices/$invoiceId.lazy').then((d) => d.Route),
)

const AuthGoboGoboIdLazyRoute = AuthGoboGoboIdLazyImport.update({
  path: '/gobo/$goboId',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/gobo/$goboId.lazy').then((d) => d.Route),
)

const AuthExpenseReportLazyRoute = AuthExpenseReportLazyImport.update({
  path: '/expense/report',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/expense/report.lazy').then((d) => d.Route),
)

const AuthEquipmentEquipmentIdLazyRoute =
  AuthEquipmentEquipmentIdLazyImport.update({
    path: '/equipment/$equipmentId',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/equipment/$equipmentId.lazy').then((d) => d.Route),
  )

const AuthDatasheetsIdLazyRoute = AuthDatasheetsIdLazyImport.update({
  path: '/datasheets/$id',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/datasheets/$id.lazy').then((d) => d.Route),
)

const AuthControlComponentsControlComponentIdLazyRoute =
  AuthControlComponentsControlComponentIdLazyImport.update({
    path: '/control-components/$controlComponentId',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/control-components/$controlComponentId.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthClientsIdLazyRoute = AuthClientsIdLazyImport.update({
  path: '/clients/$id',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/clients/$id.lazy').then((d) => d.Route),
)

const AuthTimesheetDropdownsIndexLazyRoute =
  AuthTimesheetDropdownsIndexLazyImport.update({
    path: '/timesheet/dropdowns/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/timesheet/dropdowns/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthProjectsProjectIdIndexLazyRoute =
  AuthProjectsProjectIdIndexLazyImport.update({
    path: '/projects/$projectId/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/projects/$projectId/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthProjectDatabasesProjectDatabaseIdIndexLazyRoute =
  AuthProjectDatabasesProjectDatabaseIdIndexLazyImport.update({
    path: '/project-databases/$projectDatabaseId/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/project-databases/$projectDatabaseId/index.lazy'
    ).then((d) => d.Route),
  )

const AuthExpenseGlobalExpenseReportIdIndexLazyRoute =
  AuthExpenseGlobalExpenseReportIdIndexLazyImport.update({
    path: '/expense/$globalExpenseReportId/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/expense/$globalExpenseReportId/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthEquipmentTypeGroupsEquipmentTypeGroupIdIndexLazyRoute =
  AuthEquipmentTypeGroupsEquipmentTypeGroupIdIndexLazyImport.update({
    path: '/equipment-type-groups/$equipmentTypeGroupId/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/equipment-type-groups/$equipmentTypeGroupId/index.lazy'
    ).then((d) => d.Route),
  )

const AuthTimesheetDropdownsIdLazyRoute =
  AuthTimesheetDropdownsIdLazyImport.update({
    path: '/timesheet/dropdowns/$id',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/timesheet/dropdowns/$id.lazy').then((d) => d.Route),
  )

const AuthProjectsProjectIdDocumentsLazyRoute =
  AuthProjectsProjectIdDocumentsLazyImport.update({
    path: '/projects/$projectId/documents',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/projects/$projectId/documents.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthProjectDatabasesProjectDatabaseIdRevitLazyRoute =
  AuthProjectDatabasesProjectDatabaseIdRevitLazyImport.update({
    path: '/project-databases/$projectDatabaseId/revit',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/project-databases/$projectDatabaseId/revit.lazy'
    ).then((d) => d.Route),
  )

const AuthEquipmentTypeGroupsEquipmentTypeGroupIdEquipmentTypeIdLazyRoute =
  AuthEquipmentTypeGroupsEquipmentTypeGroupIdEquipmentTypeIdLazyImport.update({
    path: '/equipment-type-groups/$equipmentTypeGroupId/$equipmentTypeId',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/equipment-type-groups/$equipmentTypeGroupId/$equipmentTypeId.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectsProjectIdBillingIndexLazyRoute =
  AuthProjectsProjectIdBillingIndexLazyImport.update({
    path: '/projects/$projectId/billing/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/projects/$projectId/billing/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthProjectDatabasesProjectDatabaseIdPunchListsIndexLazyRoute =
  AuthProjectDatabasesProjectDatabaseIdPunchListsIndexLazyImport.update({
    path: '/project-databases/$projectDatabaseId/punch-lists/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/project-databases/$projectDatabaseId/punch-lists/index.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsIndexLazyRoute =
  AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsIndexLazyImport.update({
    path: '/project-databases/$projectDatabaseId/equipment-units/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/project-databases/$projectDatabaseId/equipment-units/index.lazy'
    ).then((d) => d.Route),
  )

const AuthExpenseGlobalExpenseReportIdExpenseReportIdIndexLazyRoute =
  AuthExpenseGlobalExpenseReportIdExpenseReportIdIndexLazyImport.update({
    path: '/expense/$globalExpenseReportId/$expenseReportId/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/expense/$globalExpenseReportId/$expenseReportId/index.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsUnitsLazyRoute =
  AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsUnitsLazyImport.update({
    path: '/project-databases/$projectDatabaseId/equipment-units/units',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/project-databases/$projectDatabaseId/equipment-units/units.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsQrCodesLazyRoute =
  AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsQrCodesLazyImport.update({
    path: '/project-databases/$projectDatabaseId/equipment-units/qr-codes',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/project-databases/$projectDatabaseId/equipment-units/qr-codes.lazy'
    ).then((d) => d.Route),
  )

const AuthExpenseGlobalExpenseReportIdExpenseReportIdReviewLazyRoute =
  AuthExpenseGlobalExpenseReportIdExpenseReportIdReviewLazyImport.update({
    path: '/expense/$globalExpenseReportId/$expenseReportId/review',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/expense/$globalExpenseReportId/$expenseReportId/review.lazy'
    ).then((d) => d.Route),
  )

const AuthExpenseGlobalExpenseReportIdExpenseReportIdPrintLazyRoute =
  AuthExpenseGlobalExpenseReportIdExpenseReportIdPrintLazyImport.update({
    path: '/expense/$globalExpenseReportId/$expenseReportId/print',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/expense/$globalExpenseReportId/$expenseReportId/print.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectsProjectIdBillingWorkingPhasesIndexLazyRoute =
  AuthProjectsProjectIdBillingWorkingPhasesIndexLazyImport.update({
    path: '/projects/$projectId/billing/working-phases/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/projects/$projectId/billing/working-phases/index.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdTagLazyRoute =
  AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdTagLazyImport.update(
    {
      path: '/project-databases/$projectDatabaseId/equipment-units/$equipmentUnitId/tag',
      getParentRoute: () => AuthRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/_auth/project-databases/$projectDatabaseId/equipment-units/$equipmentUnitId/tag.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdReadonlyTagLazyRoute =
  AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdReadonlyTagLazyImport.update(
    {
      path: '/project-databases/$projectDatabaseId/equipment-units/$equipmentUnitId/readonly-tag',
      getParentRoute: () => AuthRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/_auth/project-databases/$projectDatabaseId/equipment-units/$equipmentUnitId/readonly-tag.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectsProjectIdBillingWorkingPhasesAnalyticsIndexLazyRoute =
  AuthProjectsProjectIdBillingWorkingPhasesAnalyticsIndexLazyImport.update({
    path: '/projects/$projectId/billing/working-phases/analytics/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/projects/$projectId/billing/working-phases/analytics/index.lazy'
    ).then((d) => d.Route),
  )

const AuthProjectsProjectIdBillingWorkingPhasesAnalyticsWorkingPhaseIdLazyRoute =
  AuthProjectsProjectIdBillingWorkingPhasesAnalyticsWorkingPhaseIdLazyImport.update(
    {
      path: '/projects/$projectId/billing/working-phases/analytics/$workingPhaseId',
      getParentRoute: () => AuthRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/_auth/projects/$projectId/billing/working-phases/analytics/$workingPhaseId.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/blog': {
      preLoaderRoute: typeof AuthBlogLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/fixtures': {
      preLoaderRoute: typeof AuthFixturesLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/location': {
      preLoaderRoute: typeof AuthLocationLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/': {
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/clients/$id': {
      preLoaderRoute: typeof AuthClientsIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/control-components/$controlComponentId': {
      preLoaderRoute: typeof AuthControlComponentsControlComponentIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/datasheets/$id': {
      preLoaderRoute: typeof AuthDatasheetsIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/equipment/$equipmentId': {
      preLoaderRoute: typeof AuthEquipmentEquipmentIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/expense/report': {
      preLoaderRoute: typeof AuthExpenseReportLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/gobo/$goboId': {
      preLoaderRoute: typeof AuthGoboGoboIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/invoices/$invoiceId': {
      preLoaderRoute: typeof AuthInvoicesInvoiceIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/organization/access': {
      preLoaderRoute: typeof AuthOrganizationAccessLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/timesheet/review': {
      preLoaderRoute: typeof AuthTimesheetReviewLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_public/auth/active-organization': {
      preLoaderRoute: typeof PublicAuthActiveOrganizationLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/auth/login': {
      preLoaderRoute: typeof PublicAuthLoginLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/auth/register': {
      preLoaderRoute: typeof PublicAuthRegisterLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/q/$q': {
      preLoaderRoute: typeof PublicQQLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_auth/clients/': {
      preLoaderRoute: typeof AuthClientsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/control-components/': {
      preLoaderRoute: typeof AuthControlComponentsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/datasheets/': {
      preLoaderRoute: typeof AuthDatasheetsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/equipment-type-groups/': {
      preLoaderRoute: typeof AuthEquipmentTypeGroupsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/equipment-type/': {
      preLoaderRoute: typeof AuthEquipmentTypeIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/equipment/': {
      preLoaderRoute: typeof AuthEquipmentIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/expense/': {
      preLoaderRoute: typeof AuthExpenseIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/gobo/': {
      preLoaderRoute: typeof AuthGoboIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/invoices/': {
      preLoaderRoute: typeof AuthInvoicesIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/lamps/': {
      preLoaderRoute: typeof AuthLampsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/manufacturers/': {
      preLoaderRoute: typeof AuthManufacturersIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/organization/': {
      preLoaderRoute: typeof AuthOrganizationIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/': {
      preLoaderRoute: typeof AuthProjectDatabasesIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/projects/': {
      preLoaderRoute: typeof AuthProjectsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/timesheet/': {
      preLoaderRoute: typeof AuthTimesheetIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/equipment-type-groups/$equipmentTypeGroupId/$equipmentTypeId': {
      preLoaderRoute: typeof AuthEquipmentTypeGroupsEquipmentTypeGroupIdEquipmentTypeIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/$projectDatabaseId/revit': {
      preLoaderRoute: typeof AuthProjectDatabasesProjectDatabaseIdRevitLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/projects/$projectId/documents': {
      preLoaderRoute: typeof AuthProjectsProjectIdDocumentsLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/timesheet/dropdowns/$id': {
      preLoaderRoute: typeof AuthTimesheetDropdownsIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/equipment-type-groups/$equipmentTypeGroupId/': {
      preLoaderRoute: typeof AuthEquipmentTypeGroupsEquipmentTypeGroupIdIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/expense/$globalExpenseReportId/': {
      preLoaderRoute: typeof AuthExpenseGlobalExpenseReportIdIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/$projectDatabaseId/': {
      preLoaderRoute: typeof AuthProjectDatabasesProjectDatabaseIdIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/projects/$projectId/': {
      preLoaderRoute: typeof AuthProjectsProjectIdIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/timesheet/dropdowns/': {
      preLoaderRoute: typeof AuthTimesheetDropdownsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/expense/$globalExpenseReportId/$expenseReportId/print': {
      preLoaderRoute: typeof AuthExpenseGlobalExpenseReportIdExpenseReportIdPrintLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/expense/$globalExpenseReportId/$expenseReportId/review': {
      preLoaderRoute: typeof AuthExpenseGlobalExpenseReportIdExpenseReportIdReviewLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/$projectDatabaseId/equipment-units/qr-codes': {
      preLoaderRoute: typeof AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsQrCodesLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/$projectDatabaseId/equipment-units/units': {
      preLoaderRoute: typeof AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsUnitsLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/expense/$globalExpenseReportId/$expenseReportId/': {
      preLoaderRoute: typeof AuthExpenseGlobalExpenseReportIdExpenseReportIdIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/$projectDatabaseId/equipment-units/': {
      preLoaderRoute: typeof AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/$projectDatabaseId/punch-lists/': {
      preLoaderRoute: typeof AuthProjectDatabasesProjectDatabaseIdPunchListsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/projects/$projectId/billing/': {
      preLoaderRoute: typeof AuthProjectsProjectIdBillingIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/$projectDatabaseId/equipment-units/$equipmentUnitId/readonly-tag': {
      preLoaderRoute: typeof AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdReadonlyTagLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/project-databases/$projectDatabaseId/equipment-units/$equipmentUnitId/tag': {
      preLoaderRoute: typeof AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdTagLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/projects/$projectId/billing/working-phases/': {
      preLoaderRoute: typeof AuthProjectsProjectIdBillingWorkingPhasesIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/projects/$projectId/billing/working-phases/analytics/$workingPhaseId': {
      preLoaderRoute: typeof AuthProjectsProjectIdBillingWorkingPhasesAnalyticsWorkingPhaseIdLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/projects/$projectId/billing/working-phases/analytics/': {
      preLoaderRoute: typeof AuthProjectsProjectIdBillingWorkingPhasesAnalyticsIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthRouteRoute.addChildren([
    AuthBlogLazyRoute,
    AuthFixturesLazyRoute,
    AuthLocationLazyRoute,
    AuthIndexLazyRoute,
    AuthClientsIdLazyRoute,
    AuthControlComponentsControlComponentIdLazyRoute,
    AuthDatasheetsIdLazyRoute,
    AuthEquipmentEquipmentIdLazyRoute,
    AuthExpenseReportLazyRoute,
    AuthGoboGoboIdLazyRoute,
    AuthInvoicesInvoiceIdLazyRoute,
    AuthOrganizationAccessLazyRoute,
    AuthTimesheetReviewLazyRoute,
    AuthClientsIndexLazyRoute,
    AuthControlComponentsIndexLazyRoute,
    AuthDatasheetsIndexLazyRoute,
    AuthEquipmentTypeGroupsIndexLazyRoute,
    AuthEquipmentTypeIndexLazyRoute,
    AuthEquipmentIndexLazyRoute,
    AuthExpenseIndexLazyRoute,
    AuthGoboIndexLazyRoute,
    AuthInvoicesIndexLazyRoute,
    AuthLampsIndexLazyRoute,
    AuthManufacturersIndexLazyRoute,
    AuthOrganizationIndexLazyRoute,
    AuthProjectDatabasesIndexLazyRoute,
    AuthProjectsIndexLazyRoute,
    AuthTimesheetIndexLazyRoute,
    AuthEquipmentTypeGroupsEquipmentTypeGroupIdEquipmentTypeIdLazyRoute,
    AuthProjectDatabasesProjectDatabaseIdRevitLazyRoute,
    AuthProjectsProjectIdDocumentsLazyRoute,
    AuthTimesheetDropdownsIdLazyRoute,
    AuthEquipmentTypeGroupsEquipmentTypeGroupIdIndexLazyRoute,
    AuthExpenseGlobalExpenseReportIdIndexLazyRoute,
    AuthProjectDatabasesProjectDatabaseIdIndexLazyRoute,
    AuthProjectsProjectIdIndexLazyRoute,
    AuthTimesheetDropdownsIndexLazyRoute,
    AuthExpenseGlobalExpenseReportIdExpenseReportIdPrintLazyRoute,
    AuthExpenseGlobalExpenseReportIdExpenseReportIdReviewLazyRoute,
    AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsQrCodesLazyRoute,
    AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsUnitsLazyRoute,
    AuthExpenseGlobalExpenseReportIdExpenseReportIdIndexLazyRoute,
    AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsIndexLazyRoute,
    AuthProjectDatabasesProjectDatabaseIdPunchListsIndexLazyRoute,
    AuthProjectsProjectIdBillingIndexLazyRoute,
    AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdReadonlyTagLazyRoute,
    AuthProjectDatabasesProjectDatabaseIdEquipmentUnitsEquipmentUnitIdTagLazyRoute,
    AuthProjectsProjectIdBillingWorkingPhasesIndexLazyRoute,
    AuthProjectsProjectIdBillingWorkingPhasesAnalyticsWorkingPhaseIdLazyRoute,
    AuthProjectsProjectIdBillingWorkingPhasesAnalyticsIndexLazyRoute,
  ]),
  PublicRouteRoute.addChildren([
    PublicAuthActiveOrganizationLazyRoute,
    PublicAuthLoginLazyRoute,
    PublicAuthRegisterLazyRoute,
    PublicQQLazyRoute,
  ]),
])

/* prettier-ignore-end */
